name: Create Release

on:
  push:
    tags:
      - 'v*'


jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1.1.0
      with:
        fetch-depth: 1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: set TAG output from github.ref
      id: set_tag
      env:
        GITHUB_REF: ${{ github.ref }}
      run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
    - name: set pom.xml version
      run: mvn versions:set -DnewVersion=${{ steps.set_tag.outputs.tag }} --file pom.xml
    - name: Package with maven
      run: mvn -B package --file pom.xml
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Jar as Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/ProjecteProp-${{ steps.set_tag.outputs.tag }}.jar
        asset_name: ProjecteProp-${{ steps.set_tag.outputs.tag }}.jar
        asset_content_type: application/zip
    - name: Deploy to Github Package Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github</id><username>Leixb</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        mvn deploy -DskipTests
